<?xml version="1.0" encoding="UTF-8"?>

<!-- ===== #26. mapper 기본설정 ===== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<!-- ===== #27. 루트엘리먼트 & 네임스페이스 설정(프로젝트 전체 내에서 고유해야 한다.) ===== -->
<mapper namespace="pscmember">


	
	<!-- ===== #1. 비회원 로그인 여부 알아오기 ===== -->
	<select id="nonloginEnd" parameterType="java.util.HashMap" resultType="int"> 
 	  select case( select count(*)
	               from final_nonmember
	               where nhp = #{nhp} )
	         when 1 then 1
	         else( case(select count(*) 
	                    from final_nonmember
	                    where nhp = #{nhp})
	               when 1 then 0
	               else -1
	               end
	             )
	         end as NONLOGINCHECK
	  from dual
	</select>
	
	
	<!-- ===== #2. 로그인 성공한 비회원 정보 가져오기 ===== -->

	<select id="getNonLoginEnd" parameterType="String" resultType="com.s2jo.khx.model.psc.khxpscNonMemberVO"> 
	   select nonno, nhp, npwd, status
	   from final_nonmember
	   where status = 1 and nhp = #{nhp}
	</select>

	
		
	<!-- ===== #3. 정회원 로그인 여부 알아오기 ===== 		-->
	<select id="loginEnd" parameterType="java.util.HashMap" resultType="int"> 
 	select case( select count(*)
	               from final_member
	               where userid = #{userid} )
	         when 1 then 1
	         else( case(select count(*) 
	                    from final_member
	                    where userid = #{userid})
	               when 1 then 0
	               else -1
	               end
	             )
	         end as LOGINCHECK
	  from dual
	</select>
	
	<!-- ===== #4. 정회원 로그인 완료요청! ===== 		-->
	<select id="getLoginEnd" parameterType="String" resultType="com.s2jo.khx.model.psc.khxpscMemberVO"> 
	   select userid, name, pwd, email, hp, post, addr1,
			addr2, to_char(joindate, 'yyyy-mm-dd') as joindate, status, birthday,  gender
	   from final_member
	   where status = 1 and userid = #{userid}
	</select>

	
	
</mapper>






